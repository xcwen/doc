# -*- org -*-
# +TITLE: dbproxy  配置说明 
* 概要
目前 mysql 和dbser程序 分布在多个机器上,导致用户数据分布在不同的机器上 , 为了方便统一操作。 在 dbser 前面放一个前置程序，通过它来实现对所有用户进行操作, 而无需人工地到各台机器上操作。 该前置程序就是 dbproxy.

dbproxy 目前两个版本，旧版mole,seer 还在使用。在这里介绍的是第二版

* 工作原理
向dbproxy 发出的请求报文 头部 18个字节必须是 dbser 标准的头部。即：

#+BEGIN_SRC  c++ 
typedef struct proto_header{
	uint32_t proto_length; //报文总长度
	uint32_t proto_id;//序列号，需要原样返回
	uint16_t cmd_id; //命令号
	int32_t result; //返回值
	userid_t id;  /*一般是米米号*/
} __attribute__((packed)) PROTO_HEADER;
#+END_SRC  
dbproxy 会根据 *cmd_id*  和 *id* 进行 计算 ,得到要发出的ip,port, 然后发出报文。收到返回后，再返回给前端 

** cmd_id 分段 说明
*** A类 

#+BEGIN_SRC   sh

范围:      cmd_id<0xC000 
命令号段长度:512.  
第1段：  0x0000 - 0x01FF   
第2段：  0x0200 - 0x03FF   
第3段：  0x0400 - 0x05FF   
第4段：  0x0600 - 0x07FF   
第5段：  0x0800 - 0x09FF   
第6段：  0x0A00 - 0x0BFF   
第7段：  0x0C00 - 0x0DFF   
第8段：  0x0E00 - 0x0FFF   
第9段：  0x1000 - 0x10FF   
第11段： 0x1200 - 0x13FF   
  ...
  ...
  ...
第n-1段：0xBC00 - 0xBDFF   
第n段：  0xBE00 - 0xBFFF   
#+END_SRC  

*** B类
#+BEGIN_SRC    sh
范围:      cmd_id>=0xC000 
命令号段长度:64.  

第1段：  0xC000 - 0xC01F   
第2段：  0xC020 - 0xC03F   
第3段：  0xC040 - 0xC05F   
第4段：  0xC060 - 0xC07F   
第5段：  0xC080 - 0xC09F   
第6段：  0xC0A0 - 0xC0BF   
第7段：  0xC0C0 - 0xC0DF   
第8段：  0xC0E0 - 0xC0FF   
第9段：  0xC100 - 0xC01F   
第10段： 0xC120 - 0xC03F   
  ...
  ...
  ...
第n-1段：0xFFC0 - 0xFFDF   
第n段：  0xFFE0 - 0xFFFF   
#+END_SRC  

** 分配命令号段
 *新项目可使用: 0x8000-0xBFFF* ,命令号段长度 为512.

 *其它的都为保留段，不能使用*

** cmdid, id 在路由计算中的使用方法 

cmdid: 通过cmdid 所在的分段进行路由

id分为三种:

1: 不根据 id 路由

2: 根据 id%10 (id 的最后一位)  路由 .  (一般是由于用户数据分到10个库中)

3: 根据 id%100 (id 的最后两位)  路由.  (一般是由于用户数据分到100个库中)

** 路由配置xml
route.xml 中 配置 路由规则, 以下是配置项说明 

#+BEGIN_SRC   xml
<!-- 
  name : 用于说明，无实际用处
  db_type:  就是 id的路由分类, 有三个值 
		1  : 根据  id%1 路由 （所有的都到一处） . (一般是用于用户数据不分库时)
		10 : 根据 id%10 (id 的最后一位)  路由 .  (一般是用于用户数据分到10个库中)
		100: 根据 id%100 (id 的最后两位)  路由.  (一般是用于用户数据分到100个库中)
		该值会影响到 db_startid ,db_endid 的配置
  cmd_bind: 配置哪些命令号段适合该规则 ,cmdid 为该命令号段的首个命令
  
  ip_bind:  配置 id  的规则 , 设置:v = id%db_type;
            当 v 在 匹配 某一个 [db_startid,db_endid ]时，使用该条记录的 ip,port
            如 id = 50008,  则 v=50008%10=8 , 符合第二条 [5,9]，:得到 ip="10.1.1.8"  port="30004" 

            db_startid ,db_endid 值范围:
            db_type = 1:    [0,0]
            db_type = 10:   [0,9]
            db_type = 100:  [0,99]
            
 -->
<route_item  name="XXX用户数据" db_type="10" >
    <cmd_bind>
        <item cmdid="0x8000"> </item>
        <item cmdid="0x8200"> </item>
    </cmd_bind>
    <ip_bind>
<!--  ip,port : 主连接， bak_ip bak_port：当主连接失效时，使用的备份连接   -->
        <item   db_startid="0"  db_endid="4" ip="10.1.1.5"  port="30004" bak_ip="10.1.1.10" bak_port="30004" />
        <item   db_startid="5"  db_endid="9" ip="10.1.1.8"  port="30004" />

    </ip_bind>
</route_item>
#+END_SRC  
* 例子
** 增加新的路由
mole 用户数据 分100库 

命令号段是 0x8400-0x85FF

userid 尾号 00-79 的数据 对应的  dbser ip: 10.1.1.5  port 11001

userid 尾号 80-99 的数据 对应的  dbser ip: 10.1.1.10  port 11001

#+BEGIN_SRC   xml 

<route_item  name="mole " db_type="100" >
    <cmd_bind>
        <item cmdid="0x8400"> </item>
    </cmd_bind>
    <ip_bind>
        <item   db_startid="0"  db_endid="79" ip="10.1.1.5"  port="11001" />
        <item   db_startid="80"  db_endid="99" ip="10.1.1.10"  port="11001" />
    </ip_bind>
</route_item>

#+END_SRC  

** 增加命令号段
命令号段用完了，要再加新的段 : 0x8600-0x87FF

#+BEGIN_SRC   xml 

<route_item  name="mole " db_type="100" >
    <cmd_bind>
        <item cmdid="0x8400"> </item>
	<!--新加的段 -->
        <item cmdid="0x8600"> </item>
    </cmd_bind>
    <ip_bind>
        <item   db_startid="0"  db_endid="79" ip="10.1.1.5"  port="11001" />
        <item   db_startid="80"  db_endid="99" ip="10.1.1.10"  port="11001" />
    </ip_bind>
</route_item>

#+END_SRC  

** 库拆分
将 40-79 的库 从10.1.1.5  迁移到 10.1.1.20


#+BEGIN_SRC   xml 

<route_item  name="mole " db_type="100" >
    <cmd_bind>
        <item cmdid="0x8400"> </item>
        <item cmdid="0x8600"> </item>
    <ip_bind>
        <item   db_startid="0"  db_endid="39" ip="10.1.1.5"  port="11001" />
        <item   db_startid="40"  db_endid="79" ip="10.1.1.20"  port="11001" />
        <item   db_startid="80"  db_endid="99" ip="10.1.1.10"  port="11001" />
    </ip_bind>
</route_item>

#+END_SRC  

